name: Docker Image CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DOCKER_IMAGE_NAME: yolopeanut/property-dealer-api
  CONTAINER_NAME: property-api-prod

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./property-dealer-API/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Pull latest image
            docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest
            
            # Stop and remove existing container
            docker stop ${{ env.CONTAINER_NAME }} || true
            docker rm ${{ env.CONTAINER_NAME }} || true
            
            # Run new container
            docker run -d \
              -p 127.0.0.1:5210:5210 \
              --name ${{ env.CONTAINER_NAME }} \
              --restart always \
              ${{ env.DOCKER_IMAGE_NAME }}:latest
            
            # Wait a moment for container to start
            sleep 5
            
            # Check if container is running
            if docker ps | grep -q ${{ env.CONTAINER_NAME }}; then
              echo "✅ Container is running"
              
              # Simple health check (adjust URL as needed)
              if curl -f http://localhost:5210/health >/dev/null 2>&1; then
                echo "✅ Health check passed"
              else
                echo "⚠️  Health check failed - container running but may not be ready"
              fi
            else
              echo "❌ Container failed to start"
              exit 1
            fi
            
            # Clean up old images
            docker image prune -f
